plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.example.fece_recognisition"
    compileSdk 34//flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.fece_recognisition"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21//flutter.minSdkVersion
        targetSdkVersion 33//flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // minifyEnabled false
            // // TODO: Add your own signing config for the release build.
            // // Signing with the debug keys for now, so `flutter run --release` works.
            // signingConfig signingConfigs.debug
            signingConfig signingConfigs.debug
        }
    }
    //   packagingOptions {
    //     pickFirst 'lib/x86/libc++_shared.so'
    //     pickFirst 'lib/x86_64/libc++_shared.so'
    //     pickFirst 'lib/arm64-v8a/libc++_shared.so'
    //     pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    // }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'org.tensorflow:tensorflow-lite:2.4.0' // Update to the latest version if needed
    implementation 'org.tensorflow:tensorflow-lite-gpu:2.4.0' // If you want GPU support
    implementation 'org.tensorflow:tensorflow-lite-support:0.1.0'
}
